{
	"name": "MainPipeline",
	"properties": {
		"activities": [
			{
				"name": "RequestType",
				"type": "Switch",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@pipeline().parameters.RequestType",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "Entire Design",
							"activities": [
								{
									"name": "Design",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Design",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ServerName_Para": {
												"value": "@pipeline().parameters.ClientServerName",
												"type": "Expression"
											},
											"DBName_Para": {
												"value": "@pipeline().parameters.ClientDBName",
												"type": "Expression"
											},
											"UserName_Para": {
												"value": "@pipeline().parameters.ClientUserName",
												"type": "Expression"
											},
											"Pass_Para": {
												"value": "@pipeline().parameters.ClientPass",
												"type": "Expression"
											},
											"FormDesignID": {
												"value": "@pipeline().parameters.FormDesignID",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "DesignVersion",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Design",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DesignVersion",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ServerName_Para": {
												"value": "@pipeline().parameters.ClientServerName",
												"type": "Expression"
											},
											"DBName_Para": {
												"value": "@pipeline().parameters.ClientDBName",
												"type": "Expression"
											},
											"UserName_Para": {
												"value": "@pipeline().parameters.ClientUserName",
												"type": "Expression"
											},
											"Pass_Para": {
												"value": "@pipeline().parameters.ClientPass",
												"type": "Expression"
											},
											"FormDesignID": {
												"value": "@pipeline().parameters.FormDesignID",
												"type": "Expression"
											},
											"FormDesignVersionID": {
												"value": "@pipeline().parameters.FormDesignVersionID",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "Design Version",
							"activities": [
								{
									"name": "DesignVersionCopy",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DesignVersion",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ServerName_Para": {
												"value": "@pipeline().parameters.ClientServerName",
												"type": "Expression"
											},
											"DBName_Para": {
												"value": "@pipeline().parameters.ClientDBName",
												"type": "Expression"
											},
											"UserName_Para": {
												"value": "@pipeline().parameters.ClientUserName",
												"type": "Expression"
											},
											"Pass_Para": {
												"value": "@pipeline().parameters.ClientPass",
												"type": "Expression"
											},
											"FormDesignID": {
												"value": "@pipeline().parameters.FormDesignID",
												"type": "Expression"
											},
											"FormDesignVersionID": {
												"value": "@pipeline().parameters.FormDesignVersionID",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "Expression Rule",
							"activities": [
								{
									"name": "ExpressionRuleCopy",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ExpressionRule",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ServerName_Para": {
												"value": "@pipeline().parameters.ClientServerName",
												"type": "Expression"
											},
											"DBName_Para": {
												"value": "@pipeline().parameters.ClientDBName",
												"type": "Expression"
											},
											"UserName_Para": {
												"value": "@pipeline().parameters.ClientUserName",
												"type": "Expression"
											},
											"Pass_Para": {
												"value": "@pipeline().parameters.ClientPass",
												"type": "Expression"
											},
											"FormDesignID": {
												"value": "@pipeline().parameters.FormDesignID",
												"type": "Expression"
											},
											"FormDesignVersionID": {
												"value": "@pipeline().parameters.FormDesignVersionID",
												"type": "Expression"
											},
											"DocumentRuleID": {
												"value": "@pipeline().parameters.DocumentRuleID",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Update QueueStatus To Complete",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Check For IsMasterList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[UI].[SyncUpdateQueueStatus]",
					"storedProcedureParameters": {
						"QID": {
							"value": {
								"value": "@pipeline().parameters.QID",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"QStatus": {
							"value": "3",
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SourceSqlServerLS",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Enable Table Properties",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Check For IsMasterList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[UI].[SyncEnableTableProperties]"
				},
				"linkedServiceName": {
					"referenceName": "Target_SqlServerLS",
					"type": "LinkedServiceReference",
					"parameters": {
						"ClientServerName": {
							"value": "@pipeline().parameters.ClientServerName",
							"type": "Expression"
						},
						"ClientDBName": {
							"value": "@pipeline().parameters.ClientDBName",
							"type": "Expression"
						},
						"ClientUserNameLS": {
							"value": "@pipeline().parameters.ClientUserName",
							"type": "Expression"
						},
						"ClientPassLS": {
							"value": "@pipeline().parameters.ClientPass",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Check For IsMasterList",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "To check IsMasterList And New Design",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(activity('To check IsMasterList And New Design').output.resultSets[0].rows[0].IsMasterList,equals(pipeline().parameters.RequestType,'Entire Design'))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Stored procedure for FolderCopy",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Get FolderID",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[FolderCopyProc]",
								"storedProcedureParameters": {
									"FolderID": {
										"value": {
											"value": "@activity('Get FolderID').output.resultSets[0].rows[0].FolderID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"IsMasterList": {
										"value": "1",
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "SourceSqlServerLS",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Get FolderID",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "SourceSqlServerLS",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@concat('select FolderID from fldr.folder where Name = (select FormName from ui.formdesign where FormID = ',pipeline().parameters.FormDesignID,')')",
											"type": "Expression"
										}
									}
								]
							}
						},
						{
							"name": "Copy data To ClientAzure",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Stored procedure for FolderCopy",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": "SELECT ID, SqlQuery FROM [Temp].[FolderQuery] order by ID",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SqlServerSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Source_SqlServerTableDS",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "Execquerytoclient",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "To ExecuteQuery",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Copy data To ClientAzure",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[dbo].[ExecSql]",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSqlTable",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						}
					]
				}
			},
			{
				"name": "To check IsMasterList And New Design",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "RequestType",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "SourceSqlServerLS",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('select IsMasterList from ui.formdesign where FormID = ',pipeline().parameters.FormDesignID)",
								"type": "Expression"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"QID": {
				"type": "string"
			},
			"FormDesignID": {
				"type": "string"
			},
			"FormDesignVersionID": {
				"type": "string"
			},
			"ClientServerName": {
				"type": "string"
			},
			"ClientDBName": {
				"type": "string"
			},
			"ClientUserName": {
				"type": "string"
			},
			"ClientPass": {
				"type": "string"
			},
			"RequestType": {
				"type": "string"
			},
			"DocumentRuleID": {
				"type": "string"
			}
		},
		"variables": {
			"output": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2022-07-18T08:00:20Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}